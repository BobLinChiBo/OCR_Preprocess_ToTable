[tool:pytest]
# Pytest configuration for OCR Table Extraction Pipeline

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Default options
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=ocr_pipeline
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --tb=short
    --maxfail=5

# Markers for different test types
markers =
    unit: Unit tests - fast, isolated tests
    integration: Integration tests - test component interactions
    slow: Slow tests that take significant time
    gpu: Tests that require GPU acceleration
    network: Tests that require network access
    cli: Command line interface tests
    config: Configuration system tests
    processors: Image processor tests
    pipeline: Full pipeline tests

# Ignore warnings from dependencies
filterwarnings =
    ignore::DeprecationWarning:numpy.*
    ignore::DeprecationWarning:scipy.*
    ignore::DeprecationWarning:matplotlib.*
    ignore::PendingDeprecationWarning:cv2.*
    ignore::UserWarning:pydantic.*

# Test timeout (in seconds)
timeout = 300

# Logging configuration for tests
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = src/ocr_pipeline
omit = 
    */tests/*
    */test_*
    */conftest.py
    */__init__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod